apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'me.tatarka.retrolambda'

def buildVersionNumberBlackBerry() {
  def result = android.defaultConfig.versionName
  if (result.split('\\.').length == 4)
    return result
  else
    return result + ".0"
}


android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        applicationId "org.totschnig.myexpenses"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode 258
        versionName '2.7.1.1'
        multiDexEnabled true

        buildConfigField "String", "PLATTFORM", "\"Android\""
        buildConfigField "String", "BUILD_DATE", "\"" + getDate() + "\""
        testInstrumentationRunner "org.totschnig.myexpenses.MyTestRunner"
        testProguardFile "proguard-test.txt"

        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt', 'proguard-flavored.txt'
            signingConfig signingConfigs.release
            manifestPlaceholders = [appName: "@string/app_name", debug: "false"]
            resValue "string", "content_authority", "org.totschnig.myexpenses"
        }
        debug {
            applicationIdSuffix ".debug"
            manifestPlaceholders = [appName: "My Expenses Debug", debug: "true"]
            resValue "string", "content_authority", "org.totschnig.myexpenses.debug"
            minifyEnabled true
            //shrinkResources true // need to wait for resolution
            // https://code.google.com/p/android/issues/detail?id=79325
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt', 'proguard-flavored.txt'
        }
        //beta.initWith(buildTypes.release)
    }

    productFlavors {
        play {}
        amazon {}
        blackberry {
            versionName buildVersionNumberBlackBerry()
            buildConfigField "String", "PLATTFORM", "\"Blackberry\""
        }
    }


    lintOptions {
        disable 'InvalidPackage', 'MissingQuantity', 'MissingTranslation', 'ImpliedQuantity'
    }

    dexOptions {
        javaMaxHeapSize "2048M"
        jumboMode = true
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    //testBuildType "release"
}

dependencies {
    apt 'com.google.dagger:dagger-compiler:' + project.daggerVersion
    compile 'com.google.dagger:dagger:' + project.daggerVersion
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'frankiesardo:icepick:3.2.0'
    apt 'frankiesardo:icepick-processor:3.2.0'
    compile 'com.google.code.gson:gson:2.7'
    provided 'com.google.auto.value:auto-value:1.2'
    apt 'com.google.auto.value:auto-value:1.2'
    apt 'com.ryanharter.auto.value:auto-value-gson:0.4.2'
    provided 'com.ryanharter.auto.value:auto-value-gson:0.4.2'
    apt 'com.gabrielittner.auto.value:auto-value-cursor:1.0.0'
    compile 'com.gabrielittner.auto.value:auto-value-cursor-annotations:1.0.0'
    compile project(':StickyListHeaders:library')
    compile 'com.pavelsikun:material-seekbar-preference:2.3.0+'
    compile project(':PlayLicensingOrig')
    compile project(':dav4android')
    compile 'com.android.support:appcompat-v7:' + project.androidSupportLibraryVersion
    compile 'com.android.support:support-v4:' + project.androidSupportLibraryVersion
    compile 'com.android.support:recyclerview-v7:' + project.androidSupportLibraryVersion
    compile 'com.android.support:cardview-v7:' + project.androidSupportLibraryVersion
    compile 'com.android.support:design:' + project.androidSupportLibraryVersion
    compile 'com.android.support:gridlayout-v7:' + project.androidSupportLibraryVersion
    compile 'com.android.support:preference-v14:' + "23.1.1"
    compile 'com.itextpdf:itextpdf:5.5.8'
    compile 'ch.acra:acra:4.9.1'
    compile 'com.google.android.gms:play-services-ads:9.2.0'
    //compile 'com.google.android.gms:play-services-analytics:8.4.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.onepf:openiab:0.9.8.7'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleDynamicVersion
    compile 'com.amazon.android:mobile-ads:5.+'
    compile 'org.apache.commons:commons-csv:1.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.github.PhilJay:MPAndroidChart:bd75e6c'
    compile 'com.github.mtotschnig:Caldroid:master-SNAPSHOT'
    //noinspection GradleDynamicVersion
    compile 'com.commonsware.cwac:wakeful:1.0.+'
    compile 'com.annimon:stream:1.1.2'

    // WebDAV
    compile 'com.squareup.okhttp3:okhttp:3.4.2'

    compile 'com.android.support:multidex:1.0.1'

    compile 'com.google.android.gms:play-services-drive:10.0.1'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:' + project.espressoVersion
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support:support-annotations:'  + project.androidSupportLibraryVersion
    androidTestCompile 'com.android.support.test:runner:' + project.androidSupportTestVersion
    androidTestCompile 'com.android.support.test:rules:' + project.androidSupportTestVersion
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:' + project.espressoVersion
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:' + project.espressoVersion) {
        exclude module: 'accessibility-test-framework'
    }
    //noinspection GradleDynamicVersion
    compile 'com.facebook.android:audience-network-sdk:4.+'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.crittercism.dexmaker:dexmaker:1.4'
    androidTestCompile 'com.crittercism.dexmaker:dexmaker-dx:1.4'
    androidTestCompile 'com.crittercism.dexmaker:dexmaker-mockito:1.4'

    testCompile 'junit:junit:4.12'
}
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd-HHmm')
    return formattedDate
}

//https://code.google.com/p/android/issues/detail?id=187730
//can be removed after migration to Android Gradle Plugin 2
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

//apply plugin: 'com.google.gms.google-services'
